JUnit version 4.11
..usage: man [-c|-f|-k|-w|-tZT device] [-adlhu7V] [-Mpath]
           [-Ppager] [-Slist] [-msystem] [-pstring]
           [-Llocale] [-eextension] [section] page ...
 -7,--ascii                display ASCII translation or
                           certain latin1 chars.
 -a,--all                  find all matching manual pages.
 -c,--catman               used by catman to reformat out of
                           date cat pages.
 -d,--debug                emit debugging messages.
 -D,--default              reset all options to their
                           default values.
 -e,--extension            limit search to extension type
                           'extension'.
 -f,--whatis               equivalent to whatis.
 -h,--help                 show this usage message.
 -k,--apropos              equivalent to apropos.
 -l,--local-file           interpret 'page' argument(s) as
                           local filename(s)
 -L,--locale <arg>         define the locale for this
                           particular man search.
 -M,--manpath <arg>        set search path for manual pages
                           to 'path'.
 -m,--systems <arg>        search for man pages from other
                           unix system(s).
 -P,--pager <arg>          use program 'pager' to display
                           output.
 -p,--preprocessor <arg>   string indicates which
                           preprocessor to run.
                           e - [n]eqn  p - pic     t - tbl
                           g - grap    r - refer   v -
                           vgrind
 -r,--prompt <arg>         provide 'less' pager with prompt.
 -S,--sections <arg>       use colon separated section list.
 -t,--troff                use troff format pages.
 -T,--troff-device <arg>   use groff with selected device.
 -u,--update               force a cache consistency check.
 -V,--version              show version.
 -w,--location             print physical location of man
                           page(s).
 -Z,--ditroff              use groff with selected device.
....................................................................................................................................................................................................................E.......E.........................................Exception found converting v to desired type: Unable to parse the URL: foo://commons.apache.org
..Exception found converting d to desired type: Unable to find the class: System.DateTime
..Exception found converting x to desired type: For input string: "3,5"
..Exception found converting i to desired type: java.lang.IllegalAccessException; Unable to create an instance of: java.util.Calendar
Exception found converting n to desired type: Unable to find the class: System.DateTime
....................................................................................usage: app
 -h,--help   This is
             a
             looooon
             g
             descrip
             tion
.usage:
       org.apache.comm
       ons.cli.bug.Bug
       CLI162Test
Header
-x,--extralongarg
 This description is
 Long.
Footer

..usage: org.apache.commons.cli.bug.BugCLI162Test
 -2,--jdbc2sfmd <arg>        Converts the JDBC file in the first argument
                             to an SMFD file specified in the second
                             argument.
 -a,--paramNames <arg>       Parameter XML names; default names are
                             param1, param2, etc. Example: -a "pname1
                             pname2"
 -b,--jdbc <arg>             Writes a JDBC binding node file for the given
                             SQL
 -c,--url <arg>              Connection URL
 -d,--driver <arg>           JDBC driver class name
 -e,--description <arg>      SFMD description. A default description is
                             used if omited. Example: -e "Runs such and
                             such"
 -f,--sfmd <arg>             Writes a SFMD file for the given SQL
 -g,--printTiming            Prints timing information
 -h,--help                   Prints help and quits
 -i,--interactive            Runs in interactive mode, reading and writing
                             from the console, 'go' or '/' sends a
                             statement
 -j,--node <arg>             Writes a JDBC node file for the given SQL
                             (internal debugging)
 -l,--columnNames <arg>      Column XML names; default names column
                             labels. Example: -l "cname1 cname2"
 -m,--printMetaData          Prints metadata information
 -n,--info                   Prints driver information and properties. If
                             -c is not specified, all drivers on the
                             classpath are displayed.
 -o,--paramModes <arg>       Parameters modes (1=IN, 2=INOUT, 4=OUT,
                             0=Unknown). -o and -O are mutually exclusive.
                             Example for 2 parameters, OUT and IN: -o "4
                             1"
 -O,--paramModeNames <arg>   Parameters mode names (IN, INOUT, OUT,
                             Unknown). -o and -O are mutually exclusive.
                             Example for 2 parameters, OUT and IN: -O "OUT
                             IN"
 -p,--password <arg>         The database password for the user specified
                             with the -u option. You can obfuscate the
                             password with
                             org.mortbay.jetty.security.Password, see
                             http://docs.codehaus.org/display/JETTY/Securi
                             ng+Passwords
 -s,--sql <arg>              Runs SQL or {call stored_procedure(?, ?)} or
                             {?=call function(?, ?)}
 -t,--printStack             Prints stack traces on errors
    --trim <arg>             Trims leading and trailing spaces from all
                             column values. Column XML names can be
                             optionally specified to set which columns to
                             trim.
 -u,--user <arg>             A database user name
 -w,--outfile <arg>          Writes the SQL output to the given file
 -y,--paramTypes <arg>       Parameter types from java.sql.Types. -y and
                             -Y are mutually exclusive. Example: -y "-10
                             12"
 -Y,--paramTypeNames <arg>   Parameter java.sql.Types names. -y and -Y are
                             mutually exclusive. Example: -Y "CURSOR
                             VARCHAR"
.....
Time: 0.094
There were 2 failures:
1) testRenderWrappedTextWordCut(org.apache.commons.cli.HelpFormatterTest)
java.lang.StringIndexOutOfBoundsException: String index out of range: 12
	at java.lang.String.charAt(String.java:658)
	at org.apache.commons.cli.HelpFormatter.findWrapPos(HelpFormatter.java:938)
	at org.apache.commons.cli.HelpFormatter.renderWrappedText(HelpFormatter.java:848)
	at org.apache.commons.cli.HelpFormatterTest.testRenderWrappedTextWordCut(HelpFormatterTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at org.junit.runner.JUnitCore.runMain(JUnitCore.java:96)
	at org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)
	at org.junit.runner.JUnitCore.main(JUnitCore.java:40)
2) testFindWrapPos(org.apache.commons.cli.HelpFormatterTest)
junit.framework.AssertionFailedError: wrap position 3 expected:<3> but was:<4>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.TestCase.assertEquals(TestCase.java:401)
	at org.apache.commons.cli.HelpFormatterTest.testFindWrapPos(HelpFormatterTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at org.junit.runner.JUnitCore.runMain(JUnitCore.java:96)
	at org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)
	at org.junit.runner.JUnitCore.main(JUnitCore.java:40)

FAILURES!!!
Tests run: 360,  Failures: 2


real	0m0.331s
user	0m0.680s
sys	0m0.073s
