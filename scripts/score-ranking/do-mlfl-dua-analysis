#!/bin/bash

HERE=$(readlink --canonicalize "$(dirname "${BASH_SOURCE[0]}")")
PATH="$HERE:$PATH"

USAGE="$0 PROJECT BUG COVERAGE_MATRIX"
die() {
  echo "$@" >&2
  exit 1
}

if [ "$#" != 3 ]; then echo "usage: $USAGE" >&2; exit 1; fi
PROJECT=$1
BUG=$2
COVERAGE_MATRIX=$3"/jaguar/.jaguar/matrix/relevant/filtered"

DIR="model-neural-network"; mkdir -p "$DIR"; pushd "$DIR" >/dev/null

for matrix_file_path in `find $COVERAGE_MATRIX -maxdepth 1 -mindepth 1 -type f`; do
  IFS='/' read -ra matrix_file_path_array <<< "$matrix_file_path"
  index=${#matrix_file_path_array[@]}
  filename=${matrix_file_path_array[((index-1))]}
  filename=${filename%".matrix"}

  DUA_NAMES=$3"/jaguar/.jaguar/spectra/relevant/"$filename".spectra"

  DUA_SUSPS_FILE="$(pwd)/"$filename"-dua-susps.txt"
  DUA_SUSPS_FILE_UNIFIED="$(pwd)/dua-susps.txt"

  python3 $HERE/neural-network-fl-analysis.py --matrix "$matrix_file_path" \
                                              --element-names "$DUA_NAMES" \
                                              --element-type "DUA" \
                                              --output "$DUA_SUSPS_FILE" || exit 1
done

join-dua-susps-files --dua-susps-path "$DUA_SUSPS_FILE_UNIFIED"

LINE_SUSPS_FILE=$(pwd)/line-susps.txt
dua-susps-to-line-susps --dua-susps "$DUA_SUSPS_FILE_UNIFIED" \
                        --source-code-lines "$HERE/source-code-lines/$PROJECT-${BUG}b.source-code.lines" \
                        --output "$LINE_SUSPS_FILE"
                              
DEST="$(pwd)/score.txt"
score-ranking --project "$PROJECT" --bug "$BUG" \
              --line-susps <(tail -n +2 "$LINE_SUSPS_FILE") \
              --scoring-scheme "first" \
              --sloc-csv "$HERE/buggy-lines/sloc.csv" \
              --buggy-lines "$HERE/buggy-lines/$PROJECT-$BUG.buggy.lines" \
              --output "$DEST"

popd >/dev/null
